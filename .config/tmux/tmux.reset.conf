# Tmux Configuration File - tmux.reset.conf

### CONFIGURAÇÕES GERAIS ###

# Define o shell padrão para o ambiente atual
#set -g default-shell ${SHELL}
#set -g default-command ${SHELL}

# Recarrega o arquivo de configuração do tmux
unbind ^R
bind ^R source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Define o prefixo como Ctrl-a e remove o padrão Ctrl-b
set -g prefix C-a
unbind C-b
bind C-a send-prefix
#
# Alterna entre clientes (sessões) com a tecla Space
unbind Space
bind-key Space switch-client -l
# Use current directory as window title but allow manual renaming
#set-option -g allow-rename on
# Numeração de janelas e painéis começa em 1
set -g base-index 1
#setw -g pane-base-index 1

# Configurações gerais de comportamento
set -sg escape-time 0              # Remove atraso ao pressionar teclas
set -g detach-on-destroy off       # Não desconecta ao destruir uma sessão
set -g history-limit 999999        # Limite alto para histórico de linhas
set -g renumber-windows on         # Renumera janelas automaticamente
set -g set-clipboard on            # Integra com a área de transferência
set -g status-position top         # Barra de status no topo
setw -g mode-keys vi               # Usa teclas no estilo Vim no modo de cópia
set -gq allow-passthrough on       # Permite passagem de eventos
set-option -g focus-events on      # Ativa eventos de foco

# Compatibilidade com terminal
set -g default-terminal "${TERM}"

# Estilo das bordas dos painéis
#set -g pane-border-lines double    # Linhas duplas nas bordas
#set -g pane-border-indicators both # Indicadores em ambos os lados

### NAVEGAÇÃO ENTRE JANELAS E PAINÉIS ###

# Alterna entre janelas
bind H previous-window             # Janela anterior
bind L next-window                 # Próxima janela
bind Tab last-window               # Última janela acessada
bind ^A last-window                # Última janela com Ctrl-a
unbind c
# Renomeia a janela atual
bind r command-prompt "rename-window %%"

# Lista seções abertas
unbind ^S
bind ^S run-shell "tmux switch-client -t $(tmux list-sessions -F \"#{session_name}\" | fzf --prompt=\"Sessão: \")"
# Lista janelas e sessões
bind ^W list-windows               # Lista janelas com Ctrl-w
bind w list-windows                # Lista janelas
#bind S choose-session              # Escolhe sessão
bind ^T choose-tree -Zs -O time -F "#{session_windows}" # Mostra árvore de sessões ordenada por tempo
# Seleção de painéis (navegação estilo Vim)
bind h select-pane -L              # Painel à esquerda
bind j select-pane -D              # Painel abaixo
bind k select-pane -U              # Painel acima
bind l select-pane -R              # Painel à direita

# Redimensionamento de painéis
bind -r , resize-pane -L 20        # Aumenta à esquerda
bind -r . resize-pane -R 20        # Aumenta à direita
bind -r - resize-pane -D 7         # Aumenta abaixo
bind -r = resize-pane -U 7         # Aumenta acima
bind z resize-pane -Z              # Maximiza/minimiza o painel

# Sincroniza entrada entre painéis
bind * setw synchronize-panes      # Ativa/desativa sincronização

# Alterna visibilidade da barra de borda dos painéis
bind P set pane-border-status

# Gerenciamento de painéis
bind ^X kill-pane                   # Fecha o painel atual
bind X swap-pane -D                # Troca painel com o abaixo
bind | split-window -h -c "#{pane_current_path}"  # Divide horizontalmente no diretório atual
#bind s split-window -v -c "#{pane_current_path}"  # Divide verticalmente no diretório atual
bind v split-window -h -c "#{pane_current_path}"  # Divide horizontalmente (alternativa)
bind = split-window -h -c "#{pane_current_path}"  # Divide horizontalmente
bind '"' split-window -v -c "#{pane_current_path}" # Divide verticalmente

# Comandos de controle
#bind ^X lock-server                # Bloqueia o servidor
#bind ^D detach                     # Desconecta da sessão
#bind ^L refresh-client             # Atualiza o cliente
#bind l refresh-client              # Atualiza o cliente (duplicado, considerar remover)

# Limpa a tela dentro do painel
bind -n C-l send-keys "clear"\; send-keys "Enter"
#bind -n C-l send-keys 'clear' \; send-keys 'Enter' \; clear-history
bind ^L send-keys C-l ; run 'sleep 0.1' ; clear-history
bind -n M-l send-keys C-l ; run 'sleep 0.1' ; clear-history
# Prompt de comando
bind : command-prompt              # Abre o prompt de comandos

# Modo de cópia com teclas Vi
set -g mouse on
set -s set-clipboard off
bind-key -T copy-mode-vi MouseDragEnd1Pane \
  send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

### Sessões e Janelas com Integração fzf ###
# Cria nova sessão: Exibe um prompt para o nome da sessão e a cria
bind ^N command-prompt -p "Nova sessão:" "new-session -s '%%'"
# Abre nova janela para executar um container Docker:
# Usa fzf para selecionar o nome do container ativo e executa bash dentro dele
# Abre nova janela para conexão SSH:
# Usa fzf para listar os hosts definidos no ~/.ssh/config e se conectar via ssh
bind s run-shell "tmux new-session 'ssh $(grep \"^Host \" ~/.ssh/config | awk \"{print \$2}\" | fzf --prompt=\"SSH Host: \")'"
# Abre nova janela para editar um arquivo:
# Usa fzf para buscar arquivos no diretório atual e abre o selecionado com o editor padrão ($EDITOR)
bind f run-shell "tmux new-window '$EDITOR $(find . -type f | fzf --prompt=\"Buscar arquivo: \")'"
# Cria nova janela no diretório atual
bind D command-prompt -p "Imagem Docker:" "run-shell '~/C-dotfiles/scripts/tmux-docker.sh %%'"
# Fecha a janela atual
bind x kill-window
# Nova janela sem prefixo (Alt+n)
#bind -n M-n new-window -c "#{pane_current_path}"
# Nova Seção 
bind N command-prompt -p "Nova sessão:" "new-session -s '%%'"
# Fecha janela atual sem prefixo (Alt+x)
bind -n M-x kill-window

# PROCURAR CONEXAO SSH PARA ABRIR SEÇÃO 
#bind ^S run-shell "tmux new-window 'ssh $(grep \"^Host \" ~/.ssh/config | awk \"{print \$2}\" | fzf --prompt=\"SSH Host: \")'"

### TROCA RÁPIDA ENTRE JANELAS (ALT + 1-9) ###

bind -n M-1 select-window -t 1     # Janela 1
bind -n M-2 select-window -t 2     # Janela 2
bind -n M-3 select-window -t 3     # Janela 3
bind -n M-5 select-window -t 5     # Janela 5
bind -n M-4 select-window -t 4     # Janela 4
bind -n M-6 select-window -t 6     # Janela 6
bind -n M-7 select-window -t 7     # Janela 7
bind -n M-8 select-window -t 8     # Janela 8
bind -n M-9 select-window -t 9     # Janela 9

### CONFIGURAÇÕES ADICIONAIS vim-tmux-navigator ###
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Navegação rápida entre janelas
bind-key -T root C-PageDown next-window      # Próxima janela
bind-key -T root C-PageUp previous-window    # Janela anterior

# Troca de posição das janelas
bind-key -n C-S-PageUp swap-window -d -t -1   # Move janela para a esquerda
bind-key -n C-S-PageDown swap-window -d -t +1 # Move janela para a direita

### INTEGRAÇÃO COM ÁREA DE TRANSFERÊNCIA ###

# Copia o buffer do tmux para a área de transferência do sistema
if-shell 'command -v xsel > /dev/null 2>&1' 'bind y run-shell "tmux save-buffer - | xsel -i -b"'
if-shell '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run-shell "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

